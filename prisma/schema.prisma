generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// START: User model -----------------------------------------------------------------------------------
model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name     String
  password String?
  email    String?  @unique
  phone    String   @unique
  role     Role     @default(USER)
  OTPCode  OTPCode?
  Order    Order[]
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}

// END: User model -----------------------------------------------------------------------------------

// START: Attachment model -----------------------------------------------------------------------------------
model Attachment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  key          String
  originalName String
  mimeType     String
}

// END: Attachment model -----------------------------------------------------------------------------------

// START: Log model -------------------------------------------------------------------------------------
model Log {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  type       String
  url        String
  method     String
  statusCode Int
  response   Json?
  body       Json?
  query      Json?
  params     Json?
  user       Json?
  rawHeaders Json?
  error      Json?
}

// END: Log model --------------------------------------------------------------------------------------

// START: FAQ model -----------------------------------------------------------------------------------
model FAQ {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  category FAQCategory @default(GENERAL)
  question String
  answer   String
  linkText String
  linkHref String
  position Int         @unique
}

enum FAQCategory {
  GENERAL
}

// END: FAQ model -----------------------------------------------------------------------------------

// START: OTPCode model -----------------------------------------------------------------------------------
model OTPCode {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  code      Int
  expiredAt DateTime
  userId    Int      @unique

  user User @relation(fields: [userId], references: [id])
}

// END: OTPCode model -----------------------------------------------------------------------------------

// START: Material model -----------------------------------------------------------------------------------
model Material {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unitPrice BigInt @default(0)
  title     String
}

// END: Material model -----------------------------------------------------------------------------------

// START: StructureFeature model -----------------------------------------------------------------------------------
model StructureFeature {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unitPrice BigInt @default(0)
}

// END: StructureFeature model -----------------------------------------------------------------------------------

// START: BlogPost model -----------------------------------------------------------------------------------
model BlogPost {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// END: BlogPost model -----------------------------------------------------------------------------------

// START: Order model -----------------------------------------------------------------------------------
model Order {
  id        Int         @id @default(autoincrement())
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  userId    Int
  status    OrderStatus

  user User @relation(fields: [userId], references: [id])
}

enum OrderStatus {
  PENDING
  SUCCESSFUL
  CANCELLED
}

// END: Order model -----------------------------------------------------------------------------------

// START: OrderRequest model -----------------------------------------------------------------------------------
model OrderRequest {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// END: OrderRequest model -----------------------------------------------------------------------------------
